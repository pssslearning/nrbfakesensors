[{"id":"31658207.1861be","type":"tab","label":"Sensor simulado","disabled":false,"info":""},{"id":"bb15e191.bc6ac","type":"mqtt-broker","z":"","name":"Public MQTT Broker","broker":"broker.hivemq.com","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"ea866bc6.c14b8","type":"inject","z":"31658207.1861be","name":"Scheduller","topic":"","payload":"","payloadType":"date","repeat":"5","crontab":"","once":false,"onceDelay":0.1,"x":130,"y":160,"wires":[["613f877e.43cc7"]]},{"id":"6a0709fb.0afa4","type":"function","z":"31658207.1861be","name":"SImulación","func":"let mqttTopic = global.get(\"mqttTopic\") || \"N/D\";\nlet sensorDataIn = global.get(\"sensorData\") || null;\nlet sensorName = global.get(\"sensorName\") || \"sensorName\";\nlet previousRandomValuesSet = flow.get(\"previousRandomValuesSet\") || [null, null, null, null];\nlet sensorDataOut = {\n    \"mqttTopic\": mqttTopic,\n    \"sensorData\": [],\n    \"sensorName\": sensorName\n}\n\nlet newRandomValue = 0;\nfor (i = 0; i < sensorDataIn.length; i++) {\n    newRandomValue = parseFloat(mycalculateRandomValue(sensorDataIn[i], previousRandomValuesSet[i]).toFixed(1));\n    // console.log(sensorDataIn[i].varName,newRandomValue);\n    previousRandomValuesSet[i] = newRandomValue;\n    flow.set(\"previousRandomValuesSet\", previousRandomValuesSet);\n    sensorDataOut.sensorData[i] = {\n        \"varName\": sensorDataIn[i].varName,\n        \"varMeasureUnit\": sensorDataIn[i].varMeasureUnit,\n        \"varValue\": newRandomValue\n    }\n\n}\n\nmsg.payload = sensorDataOut;\n\nreturn msg;\n\nfunction mycalculateRandomValue(sensorDataInItem, previousRandomValuesItem) {\n    max = sensorDataInItem.varMaxVal;\n    min = sensorDataInItem.varMinVal;\n    randomInterval = sensorDataInItem.varRandomInterval;\n\n    newRandomValue = previousRandomValuesItem;\n    if (newRandomValue === null) {\n        newRandomValue = (max + min) / 2;\n    }\n\n    newRandomValue += random(randomInterval * -1, randomInterval);\n    return newRandomValue;\n}\n\nfunction random(low, high) {\n    return Math.random() * (high - low) + low;\n}","outputs":1,"noerr":0,"x":390,"y":280,"wires":[["6ced4da7.d22e6c","e166af7c.fa415"]]},{"id":"6ced4da7.d22e6c","type":"debug","z":"31658207.1861be","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":590,"y":180,"wires":[]},{"id":"e166af7c.fa415","type":"mqtt out","z":"31658207.1861be","name":"Envío de datos de sensorica simulados a MQTT","topic":"","qos":"0","retain":"","broker":"bb15e191.bc6ac","x":730,"y":280,"wires":[]},{"id":"613f877e.43cc7","type":"change","z":"31658207.1861be","name":"Mqtt params set","rules":[{"t":"set","p":"topic","pt":"msg","to":"mqttTopic","tot":"global"},{"t":"set","p":"qos","pt":"msg","to":"mqttQoS","tot":"global"},{"t":"set","p":"retain","pt":"msg","to":"mqttRetain","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":300,"y":160,"wires":[["6a0709fb.0afa4"]]}]